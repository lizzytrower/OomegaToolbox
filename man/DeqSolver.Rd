% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DeqSolver.R
\name{DeqSolver}
\alias{DeqSolver}
\title{D\if{html}{\out{<sub>}}eq\if{html}{\out{</sub>}} Solver}
\usage{
DeqSolver(
  Omega,
  k = 10^1.11,
  n = 2.26,
  rho_s = 2800,
  M_min = 100.0869,
  rho_f = 1025,
  nu = 9.37 * 10^-7,
  H = 1,
  intermittency = 0.15
)
}
\arguments{
\item{Omega}{\eqn{\Omega}, the CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}} mineral saturation state, typically with respect to aragonite or calcite}

\item{k}{CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}} precipitation rate constant in umol/m\if{html}{\out{<sup>}}2\if{html}{\out{</sup>}}/hr, this is sensitive to temperature and mineralogy and can be set with an optional helper function}

\item{n}{CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}} precipitation reaction order (unitless), this is also sensitive to temperature and mineralogy and can be set with an optional helper function}

\item{rho_s}{density of sediment in kg/m\if{html}{\out{<sup>}}3\if{html}{\out{</sup>}}, this is sensitive to mineralogy}

\item{M_min}{molar mass of mineral (g/mol), default value is for CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}}}

\item{rho_f}{density of fluid (kg/m\if{html}{\out{<sup>}}3\if{html}{\out{</sup>}}), this is sensitive to temperature and salinity, helper function for calculating seawater density is available in Oomega Toolbox package}

\item{nu}{kinematic viscosity of fluid in m\if{html}{\out{<sup>}}2\if{html}{\out{</sup>}}/s, this is sensitive to temperature and salinity, helper function for calculating dynamic viscosity for seawater is available in Oomega Toolbox package; kinematic viscosity can be calculated from dynamic viscosity and density}

\item{H}{water depth in m}

\item{intermittency}{intermittency of movement, must be in the range 0-1 where 0 implies no movement and 1 implies constant movement}
}
\value{
calculated D\if{html}{\out{<sub>}}eq\if{html}{\out{</sub>}} value, in microns
}
\description{
Calculates D\if{html}{\out{<sub>}}eq\if{html}{\out{</sub>}}, the grain diameter at which precipitation and abrasion rates are equal, as a function of \eqn{\Omega}.
}
\details{
This function is an application of work originally described in:

Trower, E. J., Lamb, M. P., & Fischer, W. W. (2017). Experimental evidence that ooid size reflects a dynamic equilibrium between rapid precipitation and abrasion rates. Earth and Planetary Science Letters, 468, 112â€“118.

It is similar in underlying structure to the OomegaSolver function, and uses the uniroot.all function from the RootSolve package to solve for D\if{html}{\out{<sub>}}eq\if{html}{\out{</sub>}}.
}
\examples{
Deq_1 <- DeqSolver(4)
Omega <- seq(from=2,to=10,by=0.5)
Deq_2 <- mapply(DeqSolver,Omega = Omega)

}
