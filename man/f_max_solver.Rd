% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_max_solver.R
\name{f_max_solver}
\alias{f_max_solver}
\title{Maximum Intermittency Calculator}
\usage{
f_max_solver(
  D,
  Omega_max,
  k = 10^1.11,
  n = 2.26,
  rho_s = 2800,
  M_min = 100.0869,
  rho_f = 1025,
  nu = 9.37 * 10^-7,
  H = 1
)
}
\arguments{
\item{D}{ooid diameter in m}

\item{Omega_max}{\eqn{\Omega}, the CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}} mineral saturation state, typically with respect to aragonite or calcite; here you should choose a maximum plausible value. For example, in normal seawater for aragonite precipitation, 20 is a reasonable maximum because it is the threshold of homogeneous nucleation.}

\item{k}{CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}} precipitation rate constant in umol/m\if{html}{\out{<sup>}}2\if{html}{\out{</sup>}}/hr, this is sensitive to temperature and mineralogy and can be set with an optional helper function}

\item{n}{CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}} precipitation reaction order (unitless), this is also sensitive to temperature and mineralogy and can be set with an optional helper function}

\item{rho_s}{density of sediment in kg/m\if{html}{\out{<sup>}}3\if{html}{\out{</sup>}}, this is sensitive to mineralogy}

\item{M_min}{molar mass of mineral (g/mol), default value is for CaCO\if{html}{\out{<sub>}}3\if{html}{\out{</sub>}}}

\item{rho_f}{density of fluid (kg/m\if{html}{\out{<sup>}}3\if{html}{\out{</sup>}}), this is sensitive to temperature and salinity, helper function for calculating seawater density is available in Oomega Toolbox package}

\item{nu}{kinematic viscosity of fluid in m\if{html}{\out{<sup>}}2\if{html}{\out{</sup>}}/s, this is sensitive to temperature and salinity, helper function for calculating dynamic viscosity for seawater is available in Oomega Toolbox package; kinematic viscosity can be calculated from dynamic viscosity and density}

\item{H}{water depth in m}
}
\value{
maximum intermittency (unitless)
}
\description{
Calculates the maximum intermittency, above which precipitation cannot keep up with rapid abrasion
}
\details{
This function uses a similar framework as OomegaSolver and DeqSolver to solve for the intermittency value at a theoretical maximum \eqn{\Omega} value for a system. The idea is that this maximum Omega represents the maximum precipitation rate in that system; therefore the intermittency at such a precipitation rate represents the maximum possible intermittency because beyond this value, precipitation will always be outpaced by abrasion. Note that for many conditions, this function may return a value of 1 because the scaling of abrasion rate with size means that this is not a useful constraint for smaller ooids. It can be useful for larger ooids.
}
\examples{
f_max1 <- f_max_solver(2000*10^-6,20)
f_max2 <- mapply(f_max_solver,D=2000*10^-6,Omega_max = seq(from=20,to=25,by=0.5))
f_max3 <- mapply(f_max_solver,D=seq(from=1000,to=2000,by=100)*10^-6,Omega_max=20)

}
